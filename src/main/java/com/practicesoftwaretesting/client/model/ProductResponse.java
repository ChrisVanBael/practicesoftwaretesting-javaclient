/*
 * Toolshop API
 * Toolshop REST API technical description
 *
 * OpenAPI spec version: 0.3.0
 * Contact: info@testsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.practicesoftwaretesting.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.practicesoftwaretesting.client.model.BrandResponse;
import com.practicesoftwaretesting.client.model.CategoryResponse;
import com.practicesoftwaretesting.client.model.ImageResponse;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * ProductResponse
 */

@javax.annotation.Generated(value = "com.practicesoftwaretesting.codegen.v3.generators.java.JavaClientCodegen", date = "2023-01-29T11:45:28.552Z[GMT]")
public class ProductResponse {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("is_location_offer")
  private Boolean isLocationOffer = null;

  @SerializedName("is_rental")
  private Boolean isRental = null;

  @SerializedName("brand")
  private BrandResponse brand = null;

  @SerializedName("category")
  private CategoryResponse category = null;

  @SerializedName("product_image")
  private ImageResponse productImage = null;

  public ProductResponse id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1", description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ProductResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "new brand", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProductResponse description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "Lorum ipsum", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProductResponse price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(example = "9.99", description = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public ProductResponse isLocationOffer(Boolean isLocationOffer) {
    this.isLocationOffer = isLocationOffer;
    return this;
  }

   /**
   * Get isLocationOffer
   * @return isLocationOffer
  **/
  @Schema(example = "false", description = "")
  public Boolean isIsLocationOffer() {
    return isLocationOffer;
  }

  public void setIsLocationOffer(Boolean isLocationOffer) {
    this.isLocationOffer = isLocationOffer;
  }

  public ProductResponse isRental(Boolean isRental) {
    this.isRental = isRental;
    return this;
  }

   /**
   * Get isRental
   * @return isRental
  **/
  @Schema(example = "false", description = "")
  public Boolean isIsRental() {
    return isRental;
  }

  public void setIsRental(Boolean isRental) {
    this.isRental = isRental;
  }

  public ProductResponse brand(BrandResponse brand) {
    this.brand = brand;
    return this;
  }

   /**
   * Get brand
   * @return brand
  **/
  @Schema(description = "")
  public BrandResponse getBrand() {
    return brand;
  }

  public void setBrand(BrandResponse brand) {
    this.brand = brand;
  }

  public ProductResponse category(CategoryResponse category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public CategoryResponse getCategory() {
    return category;
  }

  public void setCategory(CategoryResponse category) {
    this.category = category;
  }

  public ProductResponse productImage(ImageResponse productImage) {
    this.productImage = productImage;
    return this;
  }

   /**
   * Get productImage
   * @return productImage
  **/
  @Schema(description = "")
  public ImageResponse getProductImage() {
    return productImage;
  }

  public void setProductImage(ImageResponse productImage) {
    this.productImage = productImage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductResponse productResponse = (ProductResponse) o;
    return Objects.equals(this.id, productResponse.id) &&
        Objects.equals(this.name, productResponse.name) &&
        Objects.equals(this.description, productResponse.description) &&
        Objects.equals(this.price, productResponse.price) &&
        Objects.equals(this.isLocationOffer, productResponse.isLocationOffer) &&
        Objects.equals(this.isRental, productResponse.isRental) &&
        Objects.equals(this.brand, productResponse.brand) &&
        Objects.equals(this.category, productResponse.category) &&
        Objects.equals(this.productImage, productResponse.productImage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, price, isLocationOffer, isRental, brand, category, productImage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    isLocationOffer: ").append(toIndentedString(isLocationOffer)).append("\n");
    sb.append("    isRental: ").append(toIndentedString(isRental)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    productImage: ").append(toIndentedString(productImage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
