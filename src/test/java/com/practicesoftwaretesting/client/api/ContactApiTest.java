/*
 * Toolshop API
 * Toolshop REST API technical description
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@testsmith.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.practicesoftwaretesting.client.api;

import com.practicesoftwaretesting.client.model.ContactReplyResponse;
import com.practicesoftwaretesting.client.model.ContactRequest;
import com.practicesoftwaretesting.client.model.ContactResponse;
import com.practicesoftwaretesting.client.model.InlineResponse200;
import com.practicesoftwaretesting.client.model.InlineResponse2001;
import com.practicesoftwaretesting.client.model.InlineResponse2002;
import com.practicesoftwaretesting.client.model.InlineResponse401;
import com.practicesoftwaretesting.client.model.InlineResponse404;
import com.practicesoftwaretesting.client.model.InlineResponse4041;
import com.practicesoftwaretesting.client.model.InlineResponse405;
import com.practicesoftwaretesting.client.model.MessageIdStatusBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ContactApi
 */
@Ignore
public class ContactApiTest {

    private final ContactApi api = new ContactApi();

    /**
     * Retrieve specific message
     *
     * Retrieve specific message
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMessageTest() throws Exception {
        Integer messageId = null;
        ContactResponse response = api.getMessage(messageId);

        // TODO: test validations
    }
    /**
     * Retrieve messages
     *
     * &#x60;admin&#x60; retrieves all messages, &#x60;user&#x60; retrieves only related messages
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMessagesTest() throws Exception {
        InlineResponse2001 response = api.getMessages();

        // TODO: test validations
    }
    /**
     * Send new contact message
     *
     * Send new contact message by mail
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void replyToMessageTest() throws Exception {
        ContactRequest body = null;
        Integer messageId = null;
        ContactReplyResponse response = api.replyToMessage(body, messageId);

        // TODO: test validations
    }
    /**
     * Send new contact message
     *
     * Send new contact message by mail
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void sendMessageTest() throws Exception {
        ContactRequest body = null;
        InlineResponse2002 response = api.sendMessage(body);

        // TODO: test validations
    }
    /**
     * Set a new message status
     *
     * Set a new message status. Possible values: &#x60;NEW&#x60;, &#x60;IN_PROGRESS&#x60;, &#x60;RESOLVED&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateMessageStatusTest() throws Exception {
        Integer messageId = null;
        MessageIdStatusBody body = null;
        InlineResponse200 response = api.updateMessageStatus(messageId, body);

        // TODO: test validations
    }
}
